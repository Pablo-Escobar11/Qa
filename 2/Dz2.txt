Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

 4. Создать файл “new.json”    touch new.json
 5. Добавить файл под гит.     git add new.json
 6. Закоммитить файл.          git commit -m 'first'
 7. Отправить файл на внешний GitHub репозиторий.  git push
 8. Создать файлы new2.json, new2.xml, new2.txt    touch new2.json new2.xml new2.txt 
 9. Добавить файлы под гит.   git add  new2.json new2.xml new2.txt
 10. Закоммитить файлы.    git commit -m 'second'
 11. Отправить файлы на внешний GitHub репозиторий.  git push
 12. Отредактировать содержание файла “new2.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). vim new2.txt   
 13. Отредактировать содержание файла “new2.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.  vim new2.json; 
{
   "name":"Pavel",
   "surname":"Ermalovich",
   "second name":"Dmitrievich",
   "age":21,
   "pets":"zero",
   "salary":5000
}

 14. Добавить и закоммитить “new2.txt” одной строчкой. git add new2.txt && git commit -m "four"
 15. Добавить и закоммитить “new2.json” одной строчкой. git add new2.json && git commit -m "five"
 16. Отправить изменения на внешний репозиторий. git push
 17. Отредактировать содержание файла “new2.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
<?xml version="1.0" encoding="utf-8"?>
<info>
<Student name="Pavel">
<surname>Ermalovich</surname>
<secodName>Dmitrievich</secodName>
<age>21</age>
<pets>0</pets>
<salary>5000</salary>
</Student>
</info>

 18. Добавить и закоммитить “new2.xml” одной строчкой. git add new2.xml && git commit -m "six"
 19. Отправить изменения на внешний репозиторий. git push
 20. Отправить предыдущее домашнее задание по GitBush Terminal на внешний репозиторий.    
     git add pavel.txt 
     git commit -m "second"
     git push
 21. В веб интерфейсе GitHub создать файл new3.txt.
     1. Открыть репозиторий
     2. зайти в нужную папку
     3. кликнуть "Add file" и выбрать "Create new file"  
 22. Отредактировать в веб интерфейсе содержание файла “new3.txt” - написать информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить).
     1. Открыть репозиторий
     2. зайти в нужную папку 
     3. Открыть файл
     4. Edit this file
 23. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     1. Открыть репозиторий
     2. зайти в нужную папку 
     3. Открыть файл
     4. Edit this file
     5. commit changes
 24. Синхронизировать внешний и локальный репозитории (слить изменения с внешнего репозитория)  git pull
 25. Отредактировать в веб интерфейсе содержание файла “new2.json” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате JSON.
     1. Открыть репозиторий
     2. зайти в нужную папку 
     3. Открыть файл
     4. Edit this file
26. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     1. Открыть репозиторий
     2. зайти в нужную папку 
     3. Открыть файл
     4. Edit this file
     5. commit changes
 27. Синхронизировать внешний и локальный репозитории   git pull
 28. Отредактировать в веб интерфейсе содержание файла “new2.xml” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате XML.
     1. Открыть репозиторий
     2. зайти в нужную папку 
     3. Открыть файл
     4. Edit this file
 29. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     1. Открыть репозиторий
     2. зайти в нужную папку 
     3. Открыть файл
     4. Edit this file
     5. commit changes
 30. Синхронизировать внешний и локальный репозитории  git pull
